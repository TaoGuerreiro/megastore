.inline-block.min-w-full.py-2.sm:py-5.align-middle data-controller="photo-upload"
  = simple_form_for [:admin, item], data: { turbo: false } do |field|
    h3.mb-6.text-2xl.text-contrast Informations

    .flex.gap-4
      = field.input :name, label: "Nom", placeholder: "Nom"
      = field.input :sub_name, label: "Sous-titre", placeholder: "Sous-titre"
    = field.input :description, as: :text, label: "Description", placeholder: "Description"
    .flex.gap-4
      = field.input :price, label: "Prix", placeholder: "Prix"
      = field.input :stock, label: "Stock", placeholder: "Stock"
      = field.association :category, collection: Current.store.categories.map {|category| [category.name, category.id]}, label: "Catégorie", placeholder: "Catégorie"

    - if Current.store.slug == "ttt"
      h3.mb-6.text-2xl.text-contrast Auteur.i.ces
      = field.association :authors,
        as: :select,
        label: false,
        collection: Author.all.map {|author| [author.nickname, author.id]},
        input_html: { multiple: true, data: { controller: "select"} }

    h3.mb-6.text-2xl.text-contrast Dimensions

    .grid.grid-cols-2.sm:grid-cols-4.gap-4.mb-6
      .relative.w-full
        = field.input :width, as: :string, label: "Largeur", placeholder: "Largeur", input_html: { value: number_with_precision(item&.width&.fdiv(10), precision: 1) }
        span.text-midgray.text-xs.absolute.right-3.top-3
          | cm

      .relative.w-full
        = field.input :height, as: :string, label: "Hauteur", placeholder: "Hauteur", input_html: { value: number_with_precision(item&.height&.fdiv(10), precision: 1) }
        span.text-midgray.text-xs.absolute.right-3.top-3
          | cm

      .relative.w-full
        = field.input :length, as: :string, label: "Longueur", placeholder: "Longueur", input_html: { value: number_with_precision(item&.length&.fdiv(10), precision: 1) }
        span.text-midgray.text-xs.absolute.right-3.top-3
          | cm

      .relative.w-full
        = field.input :weight, as: :string, label: "Poids", placeholder: "Poids", input_html: { value: item.weight }
        span.text-midgray.text-xs.absolute.right-3.top-3
          | gr

    .flex.flex-col-reverse.sm:flex-row.justify-between.mb-6.gap-4
      .flex.w-full.sm:w-1/3
        i.fa-solid.fa-info-circle.mr-2.pt-1.text-secondary
        ul.text-midgray
          li Le poids et les dimensions correspondent aux caractéristique de l'article emballé. Il est important de les renseigner pour le calcul des frais de port.
          li Il est important de renseigner la dimension la plus petite en "hauteur" pour les articles qui passent en lettre (3cm).
      = image_tag "box.svg", class: "h-48 mx-auto"


    h3.mb-6.text-2xl.text-contrast Affichage
    / - unless item.archived?
    /   = field.input :active, label: "En ligne", as: :boolean, input_html: { checked: item.active?, class: "w-5 h-5 m-0 p-0 flex checked:!bg-primary"}, wrapper_html: {class: "flex items-center"}, label_html: {class: "-top-0.5 left-4"}
    div.flex.gap-3.mb-6
      - Item.status.values.each do |status|
        div
          = field.radio_button :status, status, id: status, class: "hidden peer"
          = field.label :status, for: status, class: "block py-3 px-3 first:mx-0 mb-2 border rounded-md cursor-pointer text-content bg-contour peer-checked:bg-tertiary peer-checked:text-contrast transition-colors duration-300 peer-checked:border peer-checked:border-primary" do
            = I18n.t("enumerize.item.status.#{status}")

    - if Current.store.slug == "ttt"
      = field.input :external_link, label: "Lien financement", placeholder: "Lien financement"

    h3.mb-6.text-2xl.text-contrast Spécifications
    = field.association :specifications,
      as: :select,
      label: false,
      collection: @specifications,
      input_html: { multiple: true, data: { controller: "select"} }

    h3.mb-6.text-2xl.text-contrast Collection
    .flex.gap-3
      = field.association :collection,
        as: :select,
        label: false,
        collection: Collection.all,
        input_html: { data: { controller: "select" }}

      = field.input :format, label: "Format", placeholder: "Format"


    h3.mb-6.text-2xl.text-contrast Photos
    = field.input :photos, label: false, input_html: {value: item.photos, multiple: true, class: "hidden", data: { action: "change->photo-upload#show" }}
    = field.label :photos do
      .btn.btn-primary.inline Ajouter des photos

  .mt-5 data-photo-upload-target="photosContainer"
    - if item.persisted?
      - item.photos.each do |photo|
        = turbo_frame_tag dom_id(photo) do
          .inline-block.w-20.h-20.mr-4.bg-contrast.rounded-xl.relative
            = image_tag photo.variant(resize_to_fill: [50, 50]), class: "w-full h-full object-cover rounded-xl"
            = button_to remove_photo_admin_item_path(item, photo_id: photo), method: :delete, class: "absolute top-1 right-1 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center text-contrast hover:bg-red-600" do
              i.fas.fa-times
