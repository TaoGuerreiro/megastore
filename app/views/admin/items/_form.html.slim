.mt-8.flow-root.max-w-3xl.mx-auto
  .
    .inline-block.min-w-full.py-5.align-middle.sm:px-6.lg:px-8 data-controller="photo-upload"
      = simple_form_for [:admin, @item] do |field|
        h3.mb-6.text-2xl.text-contrast Informations

        = field.input :name, label: "Nom", placeholder: "Nom"
        = field.input :description, as: :text, label: "Description", placeholder: "Description"
        .flex.gap-4
          = field.input :price, label: "Prix", placeholder: "Prix"
          = field.input :stock, label: "Stock", placeholder: "Stock"
          = field.association :category, collection: Current.store.categories.map {|category| [category.name, category.id]}, label: "Catégorie", placeholder: "Catégorie"

        h3.mb-6.text-2xl.text-contrast Spécifications

        .flex.gap-4
          .relative.w-full
            = field.input :width, label: "Largeur", placeholder: "Largeur"
            span.text-midgray.text-xs.absolute.right-3.top-3
              | cm

          .relative.w-full
            = field.input :height, label: "Hauteur", placeholder: "Hauteur"
            span.text-midgray.text-xs.absolute.right-3.top-3
              | cm

          .relative.w-full
            = field.input :length, label: "Longueur", placeholder: "Longueur"
            span.text-midgray.text-xs.absolute.right-3.top-3
              | cm

          .relative.w-full
            = field.input :weight, label: "Poids", placeholder: "Poids"
            span.text-midgray.text-xs.absolute.right-3.top-3
              | gr


        h3.mb-6.text-2xl.text-contrast Photos

        - unless @item.archived?
          = field.input :active, label: "En ligne", as: :boolean, input_html: { checked: @item.active?, class: "w-5 h-5 m-0 p-0 flex checked:bg-primary"}, wrapper_html: {class: "flex items-center"}, label_html: {class: "-top-0.5 left-4"}
        = field.input :photos, label: false, input_html: { multiple: true, class: "hidden", data: { action: "change->photo-upload#show" }}
        = field.label :photos do
          .btn.btn-primary.inline Ajouter une photo

        .grid.grid-cols-3.mt-8
          - ShippingMethod.all.each do |shipping_method|
            div class="relative"
              = field.check_box :shipping_method_ids, { id: "shipping_method_#{shipping_method.id}", multiple: true, checked: @item.shipping_methods.pluck(:id).include?(shipping_method.id), class: "hidden peer" }, shipping_method.id, nil
              = field.label :shipping_method_ids, for: "shipping_method_#{shipping_method.id}", class: "block py-3 px-2 first:mx-0 mx-2 my-2 border rounded-md cursor-pointer text-content bg-contour peer-checked:bg-tertiary peer-checked:text-white transition-colors duration-300" do
                span.flex.flex-1
                  span.flex.flex-col
                    span#delivery-method-0-label.block.text-sm.font-medium.text-contrast
                      p.truncate
                        = shipping_method.name
                    span#delivery-method-0-description-0.mt-1.flex.items-center.text-sm.text-midgray
                      = shipping_method.description
                    span#delivery-method-0-description-1.mt-6.text-sm.font-medium.text-contrast
                      = "#{shipping_method.price} €"
              .hidden.peer-checked:block.absolute.right-10.top-1/2.-translate-y-1/2
                i.fa-solid.fa-badge-check.text-3xl.text-primary

      .mt-5 data-photo-upload-target="photosContainer"
        - if @item.persisted?
          - @item.photos.each do |photo|
            .inline-block.w-20.h-20.mr-4.bg-contrast.rounded-xl.relative
              = image_tag photo, class: "w-full h-full object-cover rounded-xl"
              = button_to remove_photo_admin_item_path(@item, photo_id: photo), method: :delete, class: "absolute top-1 right-1 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center text-contrast hover:bg-red-600" do
                i.fas.fa-times
